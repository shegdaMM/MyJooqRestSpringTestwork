/*
 * This file is generated by jOOQ.
 */
package ua.at.shegda.patientcards.model;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import ua.at.shegda.patientcards.model.tables.Doctor;
import ua.at.shegda.patientcards.model.tables.Medicalsession;
import ua.at.shegda.patientcards.model.tables.Patient;
import ua.at.shegda.patientcards.model.tables.Positionbuild;
import ua.at.shegda.patientcards.model.tables.Status;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Patientregsys extends SchemaImpl {

    private static final long serialVersionUID = 1558054503;

    /**
     * The reference instance of <code>patientregsys</code>
     */
    public static final Patientregsys PATIENTREGSYS = new Patientregsys();

    /**
     * The table <code>patientregsys.doctor</code>.
     */
    public final Doctor DOCTOR = ua.at.shegda.patientcards.model.tables.Doctor.DOCTOR;

    /**
     * The table <code>patientregsys.medicalsession</code>.
     */
    public final Medicalsession MEDICALSESSION = ua.at.shegda.patientcards.model.tables.Medicalsession.MEDICALSESSION;

    /**
     * The table <code>patientregsys.patient</code>.
     */
    public final Patient PATIENT = ua.at.shegda.patientcards.model.tables.Patient.PATIENT;

    /**
     * The table <code>patientregsys.positionbuild</code>.
     */
    public final Positionbuild POSITIONBUILD = ua.at.shegda.patientcards.model.tables.Positionbuild.POSITIONBUILD;

    /**
     * The table <code>patientregsys.status</code>.
     */
    public final Status STATUS = ua.at.shegda.patientcards.model.tables.Status.STATUS;

    /**
     * No further instances allowed
     */
    private Patientregsys() {
        super("patientregsys", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Doctor.DOCTOR,
            Medicalsession.MEDICALSESSION,
            Patient.PATIENT,
            Positionbuild.POSITIONBUILD,
            Status.STATUS);
    }
}
