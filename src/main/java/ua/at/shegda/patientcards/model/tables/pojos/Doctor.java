/*
 * This file is generated by jOOQ.
 */
package ua.at.shegda.patientcards.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Doctor implements Serializable {

    private static final long serialVersionUID = -748562286;

    private Integer   doctorcolId;
    private String    doctorcolName;
    private String    doctorcolSurname;
    private String    doctorcolOtchestvo;
    private LocalDate doctorcolDateofbirth;
    private String    doctorcolDiscription;
    private String    doctorcolSpecialnost;
    private String    doctorcolUniversity;
    private String    doctorcolAddress;
    private String    doctorcolPhone;
    private String    login;
    private String    password;
    private String    type;

    public Doctor() {}

    public Doctor(Doctor value) {
        this.doctorcolId = value.doctorcolId;
        this.doctorcolName = value.doctorcolName;
        this.doctorcolSurname = value.doctorcolSurname;
        this.doctorcolOtchestvo = value.doctorcolOtchestvo;
        this.doctorcolDateofbirth = value.doctorcolDateofbirth;
        this.doctorcolDiscription = value.doctorcolDiscription;
        this.doctorcolSpecialnost = value.doctorcolSpecialnost;
        this.doctorcolUniversity = value.doctorcolUniversity;
        this.doctorcolAddress = value.doctorcolAddress;
        this.doctorcolPhone = value.doctorcolPhone;
        this.login = value.login;
        this.password = value.password;
        this.type = value.type;
    }

    public Doctor(
        Integer   doctorcolId,
        String    doctorcolName,
        String    doctorcolSurname,
        String    doctorcolOtchestvo,
        LocalDate doctorcolDateofbirth,
        String    doctorcolDiscription,
        String    doctorcolSpecialnost,
        String    doctorcolUniversity,
        String    doctorcolAddress,
        String    doctorcolPhone,
        String    login,
        String    password,
        String    type
    ) {
        this.doctorcolId = doctorcolId;
        this.doctorcolName = doctorcolName;
        this.doctorcolSurname = doctorcolSurname;
        this.doctorcolOtchestvo = doctorcolOtchestvo;
        this.doctorcolDateofbirth = doctorcolDateofbirth;
        this.doctorcolDiscription = doctorcolDiscription;
        this.doctorcolSpecialnost = doctorcolSpecialnost;
        this.doctorcolUniversity = doctorcolUniversity;
        this.doctorcolAddress = doctorcolAddress;
        this.doctorcolPhone = doctorcolPhone;
        this.login = login;
        this.password = password;
        this.type = type;
    }

    public Integer getDoctorcolId() {
        return this.doctorcolId;
    }

    public void setDoctorcolId(Integer doctorcolId) {
        this.doctorcolId = doctorcolId;
    }

    public String getDoctorcolName() {
        return this.doctorcolName;
    }

    public void setDoctorcolName(String doctorcolName) {
        this.doctorcolName = doctorcolName;
    }

    public String getDoctorcolSurname() {
        return this.doctorcolSurname;
    }

    public void setDoctorcolSurname(String doctorcolSurname) {
        this.doctorcolSurname = doctorcolSurname;
    }

    public String getDoctorcolOtchestvo() {
        return this.doctorcolOtchestvo;
    }

    public void setDoctorcolOtchestvo(String doctorcolOtchestvo) {
        this.doctorcolOtchestvo = doctorcolOtchestvo;
    }

    public LocalDate getDoctorcolDateofbirth() {
        return this.doctorcolDateofbirth;
    }

    public void setDoctorcolDateofbirth(LocalDate doctorcolDateofbirth) {
        this.doctorcolDateofbirth = doctorcolDateofbirth;
    }

    public String getDoctorcolDiscription() {
        return this.doctorcolDiscription;
    }

    public void setDoctorcolDiscription(String doctorcolDiscription) {
        this.doctorcolDiscription = doctorcolDiscription;
    }

    public String getDoctorcolSpecialnost() {
        return this.doctorcolSpecialnost;
    }

    public void setDoctorcolSpecialnost(String doctorcolSpecialnost) {
        this.doctorcolSpecialnost = doctorcolSpecialnost;
    }

    public String getDoctorcolUniversity() {
        return this.doctorcolUniversity;
    }

    public void setDoctorcolUniversity(String doctorcolUniversity) {
        this.doctorcolUniversity = doctorcolUniversity;
    }

    public String getDoctorcolAddress() {
        return this.doctorcolAddress;
    }

    public void setDoctorcolAddress(String doctorcolAddress) {
        this.doctorcolAddress = doctorcolAddress;
    }

    public String getDoctorcolPhone() {
        return this.doctorcolPhone;
    }

    public void setDoctorcolPhone(String doctorcolPhone) {
        this.doctorcolPhone = doctorcolPhone;
    }

    public String getLogin() {
        return this.login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Doctor other = (Doctor) obj;
        if (doctorcolId == null) {
            if (other.doctorcolId != null)
                return false;
        }
        else if (!doctorcolId.equals(other.doctorcolId))
            return false;
        if (doctorcolName == null) {
            if (other.doctorcolName != null)
                return false;
        }
        else if (!doctorcolName.equals(other.doctorcolName))
            return false;
        if (doctorcolSurname == null) {
            if (other.doctorcolSurname != null)
                return false;
        }
        else if (!doctorcolSurname.equals(other.doctorcolSurname))
            return false;
        if (doctorcolOtchestvo == null) {
            if (other.doctorcolOtchestvo != null)
                return false;
        }
        else if (!doctorcolOtchestvo.equals(other.doctorcolOtchestvo))
            return false;
        if (doctorcolDateofbirth == null) {
            if (other.doctorcolDateofbirth != null)
                return false;
        }
        else if (!doctorcolDateofbirth.equals(other.doctorcolDateofbirth))
            return false;
        if (doctorcolDiscription == null) {
            if (other.doctorcolDiscription != null)
                return false;
        }
        else if (!doctorcolDiscription.equals(other.doctorcolDiscription))
            return false;
        if (doctorcolSpecialnost == null) {
            if (other.doctorcolSpecialnost != null)
                return false;
        }
        else if (!doctorcolSpecialnost.equals(other.doctorcolSpecialnost))
            return false;
        if (doctorcolUniversity == null) {
            if (other.doctorcolUniversity != null)
                return false;
        }
        else if (!doctorcolUniversity.equals(other.doctorcolUniversity))
            return false;
        if (doctorcolAddress == null) {
            if (other.doctorcolAddress != null)
                return false;
        }
        else if (!doctorcolAddress.equals(other.doctorcolAddress))
            return false;
        if (doctorcolPhone == null) {
            if (other.doctorcolPhone != null)
                return false;
        }
        else if (!doctorcolPhone.equals(other.doctorcolPhone))
            return false;
        if (login == null) {
            if (other.login != null)
                return false;
        }
        else if (!login.equals(other.login))
            return false;
        if (password == null) {
            if (other.password != null)
                return false;
        }
        else if (!password.equals(other.password))
            return false;
        if (type == null) {
            if (other.type != null)
                return false;
        }
        else if (!type.equals(other.type))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.doctorcolId == null) ? 0 : this.doctorcolId.hashCode());
        result = prime * result + ((this.doctorcolName == null) ? 0 : this.doctorcolName.hashCode());
        result = prime * result + ((this.doctorcolSurname == null) ? 0 : this.doctorcolSurname.hashCode());
        result = prime * result + ((this.doctorcolOtchestvo == null) ? 0 : this.doctorcolOtchestvo.hashCode());
        result = prime * result + ((this.doctorcolDateofbirth == null) ? 0 : this.doctorcolDateofbirth.hashCode());
        result = prime * result + ((this.doctorcolDiscription == null) ? 0 : this.doctorcolDiscription.hashCode());
        result = prime * result + ((this.doctorcolSpecialnost == null) ? 0 : this.doctorcolSpecialnost.hashCode());
        result = prime * result + ((this.doctorcolUniversity == null) ? 0 : this.doctorcolUniversity.hashCode());
        result = prime * result + ((this.doctorcolAddress == null) ? 0 : this.doctorcolAddress.hashCode());
        result = prime * result + ((this.doctorcolPhone == null) ? 0 : this.doctorcolPhone.hashCode());
        result = prime * result + ((this.login == null) ? 0 : this.login.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Doctor (");

        sb.append(doctorcolId);
        sb.append(", ").append(doctorcolName);
        sb.append(", ").append(doctorcolSurname);
        sb.append(", ").append(doctorcolOtchestvo);
        sb.append(", ").append(doctorcolDateofbirth);
        sb.append(", ").append(doctorcolDiscription);
        sb.append(", ").append(doctorcolSpecialnost);
        sb.append(", ").append(doctorcolUniversity);
        sb.append(", ").append(doctorcolAddress);
        sb.append(", ").append(doctorcolPhone);
        sb.append(", ").append(login);
        sb.append(", ").append(password);
        sb.append(", ").append(type);

        sb.append(")");
        return sb.toString();
    }
}
